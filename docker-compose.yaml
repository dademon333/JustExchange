volumes:
    redis:
    postgres:
    rabbitmq:
    media:
    frontend:


services:
    app:
        build:
            context: ./backend
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DOCKER_POSTGRESQL_HOST: $DOCKER_POSTGRESQL_HOST
            DEFAULT_POSTGRESQL_HOST: $DEFAULT_POSTGRESQL_HOST

            RABBITMQ_HOST: $RABBITMQ_HOST
            RABBITMQ_USERNAME: $RABBITMQ_USERNAME
            RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD

            DEBUG: $DEBUG
            SERVER_URL: $SERVER_URL
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1
        volumes:
            - media:/user_media
            - frontend:/frontend
        deploy:
            replicas: $APP_REPLICAS
        depends_on:
            redis:
                condition: service_started
            postgres:
                condition: service_started
            rabbitmq:
                condition: service_healthy

    daemons:
        build:
            context: ./backend
            dockerfile: daemons.dockerfile
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DOCKER_POSTGRESQL_HOST: $DOCKER_POSTGRESQL_HOST
            DEFAULT_POSTGRESQL_HOST: $DEFAULT_POSTGRESQL_HOST

            RABBITMQ_HOST: $RABBITMQ_HOST
            RABBITMQ_USERNAME: $RABBITMQ_USERNAME
            RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD

            DEBUG: $GLOBAL_DAEMONS_DEBUG
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1
        volumes:
            - ~/db_backups:/var/lib/postgres_backups
        depends_on:
            redis:
                condition: service_started
            postgres:
                condition: service_started
            rabbitmq:
                condition: service_healthy

    postgres:
        image: postgres:14-alpine
        ports:
            - "127.0.0.1:5432:5432"
        environment:
            POSTGRES_DB: $POSTGRESQL_DATABASE
            POSTGRES_PASSWORD: $POSTGRESQL_PASSWORD
            PGDATA: /var/lib/postgresql/data  # to not lose data on image updates
            # https://stackoverflow.com/a/62301253
        volumes:
            - postgres:/var/lib/postgresql/data

    nginx:
        build:
            context: ./docker_files
            dockerfile: nginx.dockerfile
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/log/nginx:/var/log/nginx
            - ./docker_files/certificate.chained.crt:/etc/nginx/ssl/certificate.chained.crt:ro
            - ./docker_files/ssl.key:/etc/nginx/ssl/ssl.key:ro
            - media:/user_media
            - frontend:/frontend
        depends_on:
            - app

    redis:
        image: redis:7-alpine
        command: --loglevel warning
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - redis:/data

    rabbitmq:
        image: rabbitmq:3.10-management-alpine
        hostname: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq:/var/lib/rabbitmq
            - ./docker_files/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
        environment:
            RABBITMQ_DEFAULT_USER: $RABBITMQ_USERNAME
            RABBITMQ_DEFAULT_PASS: $RABBITMQ_PASSWORD
        healthcheck:
          test: ["CMD", "nc", "-z", "localhost", "5672"]
          interval: 1s
          timeout: 3s
          retries: 10
          start_period: 1s

    frontend:
        build:
            context: ./frontend
            args:
                REACT_APP_SERVER_URL: $SERVER_URL
        volumes:
            - frontend:/frontend